<script setup lang='ts'>
import { HEADERLINKS } from "~/constants"
const { animateHeaderInicator, changeIndicatorActiveTabOnScroll } = useGsap()
const activeTab = ref('home-page') // index??

onMounted(() => {
  setTimeout(() => {
    changeIndicatorActiveTabOnScroll((title) => { activeTab.value = title })
  }, 1500)
})
watch(activeTab, (newValue) => {
  animateHeaderInicator(newValue)
})
</script>

<template>
  <header id='header'
    class='fixed z-10 lg:rotate-90 lg:left-0 lg:top-1/2 lg:-translate-x-1/3 lg:rotat-90 bottom-0 left-1/2 -translate-x-1/2 -translate-y-8 bg-gradient-to-r from-main to-main-foreground min-w-64 lg:h-max rounded-xl px-8'>
    <!-- indicator -->
    <div class="header__wrapper bg-gray-800 relative py-4 w-full h-full flex items-center justify-center">
      <div id="indicator" v-if="true"
        class="border-black border-[6px] absolute w-16 h-16 bg-gradient-to-r from-indigo-600 to-pink-600 translate-x-0 left-0 top-0 rounded-full -translate-y-1/2">
        <span
          class="absolute top-1/2 -left-[22px] w-5 aspect-square bg-transparent u-shadow rounded-tr-[20px]" />
        <span
          class="absolute top-1/2 -right-[22px] w-5 aspect-square bg-transparent u-shadow rounded-tl-[20px]" />
      </div>
      <!-- icons -->
      <template v-for="(link, index) in HEADERLINKS">
        <!-- <UTooltip text="hello wolrd" :popper="{ placement: 'right' }"> -->
        <UIcon :data-section="link.title" :data-index="index" @click="activeTab = link.title" :name="link.icon"
          :class="[link.title]" class="head-icon cursor-pointer inline-block text-2xl w-12 aspect-square lg:-rotate-90" />
        <!-- </UTooltip> -->
      </template>
    </div>
  </header>
</template>

<style scoped>
.u-gradient {
  background: rgb(63, 94, 251);
  background: radial-gradient(circle, rgba(63, 94, 251, 1) 0%, rgba(252, 70, 107, 1) 100%);
}

.u-shadow {
  box-shadow: 0px -10px 0 0 #000;
}
</style>